{
  "name": "Hyperneat-adjacency-matrix",
  "tagline": "An analysis of HyperNEAT adjacency matrices using various space filling curves.",
  "body": "HyperNEAT is a well known Neuro-Evolution algorithm developed by Kenneth Stanley. HyperNEAT uses a Compositional Pattern Producing Network (CPPN) as the genotype. The CPPN is queried with substrate node coordinates to produce a connectivity patter for the phenotype. This post will be analyzing the adjacency matrices that are produced when different space-filling curves are used to number the substrate nodes instead of ordering them by row-col order.\r\n\r\nThe reason for looking at the adjacency matrices of HyperNEAT in this way is to compare and contrast them to the adjacency matrices created by Compositional Adjacency Matrix Producing Networks (CAMPN). CAMPNs is an indirect encoding that directly produces an adjacency matrix without having to query using coordinates. In fact, CAMPNs don't use spatial coordinates at all. Instead, substrate nodes are numbered using a space filling curve, which allows for locality to be preserved if the number of nodes in the substrate is to grow, as in ES-HyperNEAT.\r\n\r\nIn this post I'll be using Python Evolutionary Algorithms (peas) produced by Thomas Van Der Berg. `https://github.com/noio/peas`",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}